version: "3.8"

services:

  dbpostgres:
    image: postgres:14-alpine
    container_name: dbpostgres
    ports:
      - 5432:5432
    networks:
      mans-network:
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=spring_demo

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      mans-network:
    container_name: zookeeper

  kafka1:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    networks:
      mans-network:
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPIC: "mans_topic:1:3"

  agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_agent
    depends_on:
      - kafka1
    networks:
      mans-network:
    ports:
      - "8081:8081"
    env_file:
      - configs/agent.env

  server:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_server
    depends_on:
      - kafka1
      - dbpostgres
    networks:
      mans-network:
    ports:
      - "8080:8080"
    env_file:
      - configs/server.env

  frontend:
    build:
      context: webui/angular-app
      dockerfile: Dockerfile
    depends_on:
      - server
    networks:
      mans-network:
    ports:
      - "4200:80"

networks:
  mans-network:
    driver: bridge
