{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    const token = localStorage.getItem('token');\n    // user logged in\n    if (token) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","token","localStorage","getItem","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["/Users/zpietrza/Desktop/MaNS/software_monitoring/webui/angular-app/src/app/auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(): boolean {\n    const token = localStorage.getItem('token');\n\n    // user logged in\n    if (token) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n"],"mappings":";;AAGA,MAGaA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C;IACA,IAAIF,KAAK,EAAE;MACT,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAbWP,SAAS,C;mBAATA,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAATX,SAAS,C;SAATA,SAAS;EAAAY,OAAA,EAATZ,SAAS,CAAAa,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPd,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}